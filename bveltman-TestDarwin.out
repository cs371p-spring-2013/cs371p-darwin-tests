g++ -pedantic -std=c++0x -Wall TestDarwin.c++ -o TestDarwin -lcppunit -ldl
valgrind TestDarwin
==15768== Memcheck, a memory error detector
==15768== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==15768== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==15768== Command: TestDarwin
==15768== 
TestDarwin.c++
.......................................Turn = 0.
  01234567
0 ........
1 ........
2 ........
3 ....f...
4 ...frf..
5 ....f...
6 ........
7 ........

Turn = 1.
  01234567
0 ........
1 ........
2 ........
3 ....f...
4 ...rrf..
5 ....f...
6 ........
7 ........

.......Turn = 0.
  01
0 ..
1 ..

.Turn = 0.
  012
0 f..
1 ...
2 ...

.Turn = 0.
  012
0 f..
1 .h.
2 ..f

.Turn = 0.
  012
0 f..
1 ...
2 ..f

Turn = 3.
  012
0 f..
1 ...
2 ..f

.Turn = 0.
  012
0 f..
1 h..
2 ..f

Turn = 3.
  012
0 f..
1 ..h
2 ..f

.Turn = 0.
  01
0 rf
1 ..

Turn = 1.
  01
0 rr
1 ..

.Test Hopping 1
Turn = 0.
  01
0 h.
1 ..

Turn = 1.
  01
0 .h
1 ..

Turn = 1.
  01
0 .h
1 ..

Turn = 2.
  01
0 .h
1 ..

.Test Hopping 2
Turn = 0.
  01
0 .h
1 ..

Turn = 1.
  01
0 h.
1 ..

Turn = 1.
  01
0 h.
1 ..

Turn = 2.
  01
0 h.
1 ..

.Test Hopping 3
Turn = 0.
  01
0 ..
1 h.

Turn = 1.
  01
0 h.
1 ..

Turn = 1.
  01
0 h.
1 ..

Turn = 2.
  01
0 h.
1 ..

.Test Hopping 4
Turn = 0.
  01
0 h.
1 ..

Turn = 1.
  01
0 ..
1 h.

Turn = 1.
  01
0 ..
1 h.

Turn = 2.
  01
0 ..
1 h.

.Test Turning 1
Turn = 0.
  01
0 f.
1 ..

Turn = 1.
  01
0 f.
1 ..

Turn = 1.
  01
0 f.
1 ..

Turn = 2.
  01
0 f.
1 ..

Turn = 2.
  01
0 f.
1 ..

Turn = 3.
  01
0 f.
1 ..

Turn = 3.
  01
0 f.
1 ..

Turn = 4.
  01
0 f.
1 ..

.Test ROVER 1
Turn = 0.
  01
0 f.
1 r.

Turn = 1.
  01
0 r.
1 r.

Turn = 1.
  01
0 r.
1 r.

Turn = 2.
  01
0 rr
1 ..

Turn = 2.
  01
0 rr
1 ..

Turn = 3.
  01
0 rr
1 ..




OK (57 tests)


Done.
==15768== 
==15768== HEAP SUMMARY:
==15768==     in use at exit: 122,880 bytes in 6 blocks
==15768==   total heap usage: 68,774 allocs, 68,768 frees, 8,785,278 bytes allocated
==15768== 
==15768== LEAK SUMMARY:
==15768==    definitely lost: 0 bytes in 0 blocks
==15768==    indirectly lost: 0 bytes in 0 blocks
==15768==      possibly lost: 0 bytes in 0 blocks
==15768==    still reachable: 122,880 bytes in 6 blocks
==15768==         suppressed: 0 bytes in 0 blocks
==15768== Rerun with --leak-check=full to see details of leaked memory
==15768== 
==15768== For counts of detected and suppressed errors, rerun with: -v
==15768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)
